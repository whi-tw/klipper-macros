[delayed_gcode extruder_got_hot]
initial_duration: 1
gcode:
  {% set config = {'heater_fan_threshold': 50} %}
  {% set name = "extruder_got_hot" %}
  {% macro log(message, level='info') %}
  RESPOND PREFIX="{ "[%s%s%s]" % (name,":" if level else "", level) }" MSG="{message}"
  {% endmacro %}
  {% macro broadcast(message, level='info') %}
  { log(message, level) }
  M117 {message}
  {% endmacro %}
  {% macro activate_extruder(extruder) %}
  {% if printer.toolhead.extruder != extruder %}
  ACTIVATE_EXTRUDER EXTRUDER={extruder}
  {% endif %}
  {% endmacro %}
  {% set ns = namespace(trigger=false) %}
  {% for extruder in printer.heaters.available_heaters | select("!=", "heater_bed") | list %}
  {% if printer[extruder].temperature > config.heater_fan_threshold %}
  {% set ns.trigger = true %}
  {% endif %}
  {% endfor %}
  {% if ns.trigger %}
  UPDATE_DELAYED_GCODE ID=check_temp_power_off DURATION=1 ; trigger check_temp_power_off to run in 1 second
  UPDATE_DELAYED_GCODE ID={name} DURATION=0 ; disable myself
  { log("An extruder temperature is greater than %s C, so cooldown watcher has started." % config.heater_fan_threshold) }
  {% else %}
  UPDATE_DELAYED_GCODE ID={name} DURATION=5 ; retrigger myself in 5 seconds
  {% endif %}