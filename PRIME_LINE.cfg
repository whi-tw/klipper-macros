[gcode_macro PRIME_LINE]
gcode:
  {% set config = {'heater_fan_threshold': 50} %}
  {% set name = "PRIME_LINE" %}
  {% macro log(message, level='info') %}
  RESPOND PREFIX="{ "[%s%s%s]" % (name,":" if level else "", level) }" MSG="{message}"
  {% endmacro %}
  {% macro broadcast(message, level='info') %}
  { log(message, level) }
  M117 {message}
  {% endmacro %}
  {% macro activate_extruder(extruder) %}
  {% if printer.toolhead.extruder != extruder %}
  ACTIVATE_EXTRUDER EXTRUDER={extruder}
  {% endif %}
  {% endmacro %}
  {% set extruder_data = dict() %}
  {% for e in printer.slic3r_vars.tool_name.split(";") %}
      {% set _ = extruder_data.update({loop.index-1: {"name": e}}) %}
      {% set _ = extruder_data[loop.index-1].update({"offsets": {}}) %}
      {% set _ = extruder_data[loop.index-1]["offsets"].update({"x":    0-(printer.slic3r_vars.extruder_offset.split(",")[loop.index-1].split("x")[0] | float)}) %}
      {% set _ = extruder_data[loop.index-1]["offsets"].update({"y":    0-(printer.slic3r_vars.extruder_offset.split(",")[loop.index-1].split("x")[1] | float)}) %}
      {% set _ = extruder_data[loop.index-1].update({"start_temp":      printer.slic3r_vars.first_layer_temperature.split(",")[loop.index-1] | float}) %}
      {% set _ = extruder_data[loop.index-1].update({"retract_length":  printer.slic3r_vars.retract_length.split(",")[loop.index-1] | float}) %}
      {% set _ = extruder_data[loop.index-1].update({"retract_speed":   printer.slic3r_vars.retract_speed.split(",")[loop.index-1] | float}) %}
      {% set _ = extruder_data[loop.index-1].update({"nozzle_diameter": printer.slic3r_vars.nozzle_diameter.split(",")[loop.index-1] | float}) %}
  {% endfor %}
  {% if "%" in printer.slic3r_vars.first_layer_height %}
      {% set initial_z = '%0.2f' %((("0." + printer.slic3r_vars.first_layer_height.split("%")[0]) | float) * (extruder_data.0.nozzle_diameter | float)) %}
  {% else %}
      {% set initial_z = printer.slic3r_vars.first_layer_height %}
  {% endif %}
  {% set z_feed = 3000 %}
  {% set xy_feed = 12000 %}
  {% set bed_width = printer.slic3r_vars.bed_shape.split(",")[2].split("x")[0] | float %}
  {broadcast("Prime Line")}
  G90 ; Absolute Movement mode
  SAVE_GCODE_STATE NAME=pre-prime
  {% for i, e in extruder_data.items() if not e.start_temp == 0 %}
  G1 Z10.0 F{z_feed} ; Move Z Axis to 2
  { activate_extruder(e["name"]) }
  SET_GCODE_OFFSET X={e.offsets.x} Y={e.offsets.y} ; enable the gcode offset
  G92 E0.0 ; Reset Extruder distance position
  G1 X-2 Y{0-loop.index} F{xy_feed} ; go outside print area
  G1 Z{initial_z} F{z_feed}
  PURGE E=10 ; purge 10mm
  G1 X1 Z{initial_z} F{z_feed} ; move to bed
  G1 X{bed_width/2} E9.0 F1000.0 ; intro line
  G1 X{printer.configfile.settings.stepper_x.position_max-2} E15.0 F1000.0 ; intro line
  G92 E0.0 ; reset extruder distance position
  {% endfor %}
  RESTORE_GCODE_STATE NAME=pre-prime
  G1 Z10.0 F{z_feed} ; Move Z Axis to 2
  G91
  G1 F{xy_feed} Y5
  G90